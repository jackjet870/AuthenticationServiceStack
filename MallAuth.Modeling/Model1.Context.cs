//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MallAuth.Modeling
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CDMAMallDbContext : DbContext
    {
        public CDMAMallDbContext()
            : base("name="+System.Configuration.ConfigurationManager.AppSettings["environment"])
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Nullable<int>> AddProduct(string productName, string productInfo, string productDescription, string productDetails, string pImagUrl, Nullable<int> subCategoryID, Nullable<int> merchantID, Nullable<int> tCount, Nullable<System.DateTime> onSaleTime, Nullable<System.DateTime> offSaleTime, string keywordProductID, Nullable<int> productTypeID, Nullable<int> orderNum, string attributeXml, string imgs, Nullable<int> expressCompanyId, Nullable<int> expressFee, Nullable<bool> isRecommand)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var productInfoParameter = productInfo != null ?
                new ObjectParameter("productInfo", productInfo) :
                new ObjectParameter("productInfo", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("productDescription", productDescription) :
                new ObjectParameter("productDescription", typeof(string));
    
            var productDetailsParameter = productDetails != null ?
                new ObjectParameter("productDetails", productDetails) :
                new ObjectParameter("productDetails", typeof(string));
    
            var pImagUrlParameter = pImagUrl != null ?
                new ObjectParameter("pImagUrl", pImagUrl) :
                new ObjectParameter("pImagUrl", typeof(string));
    
            var subCategoryIDParameter = subCategoryID.HasValue ?
                new ObjectParameter("subCategoryID", subCategoryID) :
                new ObjectParameter("subCategoryID", typeof(int));
    
            var merchantIDParameter = merchantID.HasValue ?
                new ObjectParameter("merchantID", merchantID) :
                new ObjectParameter("merchantID", typeof(int));
    
            var tCountParameter = tCount.HasValue ?
                new ObjectParameter("TCount", tCount) :
                new ObjectParameter("TCount", typeof(int));
    
            var onSaleTimeParameter = onSaleTime.HasValue ?
                new ObjectParameter("onSaleTime", onSaleTime) :
                new ObjectParameter("onSaleTime", typeof(System.DateTime));
    
            var offSaleTimeParameter = offSaleTime.HasValue ?
                new ObjectParameter("offSaleTime", offSaleTime) :
                new ObjectParameter("offSaleTime", typeof(System.DateTime));
    
            var keywordProductIDParameter = keywordProductID != null ?
                new ObjectParameter("keywordProductID", keywordProductID) :
                new ObjectParameter("keywordProductID", typeof(string));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("productTypeID", productTypeID) :
                new ObjectParameter("productTypeID", typeof(int));
    
            var orderNumParameter = orderNum.HasValue ?
                new ObjectParameter("orderNum", orderNum) :
                new ObjectParameter("orderNum", typeof(int));
    
            var attributeXmlParameter = attributeXml != null ?
                new ObjectParameter("attributeXml", attributeXml) :
                new ObjectParameter("attributeXml", typeof(string));
    
            var imgsParameter = imgs != null ?
                new ObjectParameter("imgs", imgs) :
                new ObjectParameter("imgs", typeof(string));
    
            var expressCompanyIdParameter = expressCompanyId.HasValue ?
                new ObjectParameter("expressCompanyId", expressCompanyId) :
                new ObjectParameter("expressCompanyId", typeof(int));
    
            var expressFeeParameter = expressFee.HasValue ?
                new ObjectParameter("expressFee", expressFee) :
                new ObjectParameter("expressFee", typeof(int));
    
            var isRecommandParameter = isRecommand.HasValue ?
                new ObjectParameter("isRecommand", isRecommand) :
                new ObjectParameter("isRecommand", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddProduct", productNameParameter, productInfoParameter, productDescriptionParameter, productDetailsParameter, pImagUrlParameter, subCategoryIDParameter, merchantIDParameter, tCountParameter, onSaleTimeParameter, offSaleTimeParameter, keywordProductIDParameter, productTypeIDParameter, orderNumParameter, attributeXmlParameter, imgsParameter, expressCompanyIdParameter, expressFeeParameter, isRecommandParameter);
        }
    
        public virtual int AddProductExtend(string productInfo, string productDescription, Nullable<int> originalPrice, Nullable<int> tCount, Nullable<int> productId, Nullable<bool> isRecommanded, Nullable<int> orderNum, Nullable<System.DateTime> onsaletime, Nullable<System.DateTime> offsaletime, string attributeValue, string attributeDes, Nullable<int> realPrice, string priceDescription, Nullable<int> presentCoin)
        {
            var productInfoParameter = productInfo != null ?
                new ObjectParameter("productInfo", productInfo) :
                new ObjectParameter("productInfo", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("productDescription", productDescription) :
                new ObjectParameter("productDescription", typeof(string));
    
            var originalPriceParameter = originalPrice.HasValue ?
                new ObjectParameter("originalPrice", originalPrice) :
                new ObjectParameter("originalPrice", typeof(int));
    
            var tCountParameter = tCount.HasValue ?
                new ObjectParameter("TCount", tCount) :
                new ObjectParameter("TCount", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var isRecommandedParameter = isRecommanded.HasValue ?
                new ObjectParameter("IsRecommanded", isRecommanded) :
                new ObjectParameter("IsRecommanded", typeof(bool));
    
            var orderNumParameter = orderNum.HasValue ?
                new ObjectParameter("orderNum", orderNum) :
                new ObjectParameter("orderNum", typeof(int));
    
            var onsaletimeParameter = onsaletime.HasValue ?
                new ObjectParameter("onsaletime", onsaletime) :
                new ObjectParameter("onsaletime", typeof(System.DateTime));
    
            var offsaletimeParameter = offsaletime.HasValue ?
                new ObjectParameter("offsaletime", offsaletime) :
                new ObjectParameter("offsaletime", typeof(System.DateTime));
    
            var attributeValueParameter = attributeValue != null ?
                new ObjectParameter("attributeValue", attributeValue) :
                new ObjectParameter("attributeValue", typeof(string));
    
            var attributeDesParameter = attributeDes != null ?
                new ObjectParameter("attributeDes", attributeDes) :
                new ObjectParameter("attributeDes", typeof(string));
    
            var realPriceParameter = realPrice.HasValue ?
                new ObjectParameter("realPrice", realPrice) :
                new ObjectParameter("realPrice", typeof(int));
    
            var priceDescriptionParameter = priceDescription != null ?
                new ObjectParameter("priceDescription", priceDescription) :
                new ObjectParameter("priceDescription", typeof(string));
    
            var presentCoinParameter = presentCoin.HasValue ?
                new ObjectParameter("presentCoin", presentCoin) :
                new ObjectParameter("presentCoin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProductExtend", productInfoParameter, productDescriptionParameter, originalPriceParameter, tCountParameter, productIdParameter, isRecommandedParameter, orderNumParameter, onsaletimeParameter, offsaletimeParameter, attributeValueParameter, attributeDesParameter, realPriceParameter, priceDescriptionParameter, presentCoinParameter);
        }
    
        public virtual ObjectResult<getProductInfos_Result> getProductInfos(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getProductInfos_Result>("getProductInfos", productIdParameter);
        }
    
        public virtual ObjectResult<getProductList_Result> getProductList(Nullable<int> subCategoryId)
        {
            var subCategoryIdParameter = subCategoryId.HasValue ?
                new ObjectParameter("subCategoryId", subCategoryId) :
                new ObjectParameter("subCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getProductList_Result>("getProductList", subCategoryIdParameter);
        }
    
        public virtual ObjectResult<getSubCategory_Result> getSubCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSubCategory_Result>("getSubCategory");
        }
    
        public virtual ObjectResult<Nullable<int>> updateExtendProduct(Nullable<int> productId, string attributev, string pextendinfo, Nullable<System.DateTime> onsaletime, Nullable<System.DateTime> offsaletime)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var attributevParameter = attributev != null ?
                new ObjectParameter("attributev", attributev) :
                new ObjectParameter("attributev", typeof(string));
    
            var pextendinfoParameter = pextendinfo != null ?
                new ObjectParameter("pextendinfo", pextendinfo) :
                new ObjectParameter("pextendinfo", typeof(string));
    
            var onsaletimeParameter = onsaletime.HasValue ?
                new ObjectParameter("onsaletime", onsaletime) :
                new ObjectParameter("onsaletime", typeof(System.DateTime));
    
            var offsaletimeParameter = offsaletime.HasValue ?
                new ObjectParameter("offsaletime", offsaletime) :
                new ObjectParameter("offsaletime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("updateExtendProduct", productIdParameter, attributevParameter, pextendinfoParameter, onsaletimeParameter, offsaletimeParameter);
        }
    
        public virtual int updateProductInfo(Nullable<int> productId, string productName, string productsummary, string productDes, Nullable<int> ordernum, Nullable<int> tcount)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("productName", productName) :
                new ObjectParameter("productName", typeof(string));
    
            var productsummaryParameter = productsummary != null ?
                new ObjectParameter("productsummary", productsummary) :
                new ObjectParameter("productsummary", typeof(string));
    
            var productDesParameter = productDes != null ?
                new ObjectParameter("productDes", productDes) :
                new ObjectParameter("productDes", typeof(string));
    
            var ordernumParameter = ordernum.HasValue ?
                new ObjectParameter("ordernum", ordernum) :
                new ObjectParameter("ordernum", typeof(int));
    
            var tcountParameter = tcount.HasValue ?
                new ObjectParameter("tcount", tcount) :
                new ObjectParameter("tcount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateProductInfo", productIdParameter, productNameParameter, productsummaryParameter, productDesParameter, ordernumParameter, tcountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> updateProductsaleTime(Nullable<int> productId, Nullable<System.DateTime> onsaletime, Nullable<System.DateTime> offsaletime)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var onsaletimeParameter = onsaletime.HasValue ?
                new ObjectParameter("onsaletime", onsaletime) :
                new ObjectParameter("onsaletime", typeof(System.DateTime));
    
            var offsaletimeParameter = offsaletime.HasValue ?
                new ObjectParameter("offsaletime", offsaletime) :
                new ObjectParameter("offsaletime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("updateProductsaleTime", productIdParameter, onsaletimeParameter, offsaletimeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    }
}
